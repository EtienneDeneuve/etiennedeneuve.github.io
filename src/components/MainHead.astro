---
import { ViewTransitions } from "astro:transitions";
import "../styles/global.css";

interface Props {
  title?: string | undefined;
  description?: string | undefined;
  og?: string | undefined;
}

const {
  title = "Etienne Deneuve: Personal Site",
  description = "The personal site of Etienne Deneuve",
  og = "null",
} = Astro.props;

const { url, site } = Astro;
---

<meta charset="UTF-8" />
<meta property="og:type" content="website" />
<meta property="og:description" content={description} />
<meta property="og:image" content={og} />
<meta property="og:title" content={title} />
<meta property="og:url" content={url} />
<meta property="og:locale" content="fr_FR" />
<meta property="og:site_name" content="Etienne Deneuve - Personal Blog" />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="630" />
<meta name="twitter:card" content="summary_large_image" />
<meta property="twitter:domain" content="etienne.deneuve.xyz" />
<meta property="twitter:url" content="https://etienne.deneuve.xyz" />
<meta name="twitter:title" content={title} />
<meta
  name="twitter:description"
  content="The personal site of Etienne Deneuve"
/>
<meta
  name="twitter:image"
  content="https://etienne.deneuve.xyz/public/assets/portrait.jpg"
/>

<meta name="viewport" content="width=device-width" />
<meta name="generator" content={Astro.generator} />
<title>{title}</title>
<link rel="sitemap" href="/sitemap-index.xml" />
<meta name="msvalidate.01" content="DE6C71A9BE4E011D01CC38799992B4A6" />
<script
  type="text/partytown"
  async="async"
  is:inline
  crossorigin="anonymous"
  data-cookiecategory="analytics"
  data-service="Google Analytics"
  src="https://www.googletagmanager.com/gtag/js?id=UA-71551100-1"></script>
<script
  is:inline
  type="text/partytown"
  data-cookiecategory="analytics"
  data-service="Google Analytics"
>
  window.dataLayer = window.dataLayer || [];
  function gtag() {
    dataLayer.push(arguments);
  }
  gtag("js", new Date());

  gtag("config", "UA-71551100-1");
</script>
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link
  href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,400;0,700;1,400&family=Rubik:wght@500;600&display=swap"
  rel="stylesheet"
/>

<script is:inline client:load>
  // This code is inlined in the head to make dark mode instant & blocking.
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  // document.documentElement.classList[isDark ? "add" : "remove"]("");
  document.documentElement.classList[isDark ? "add" : "remove"](
    "theme-dark",
    "cc--darkmode",
  );

  if (typeof localStorage !== "undefined") {
    // Watch the document element and persist user preference when it changes.
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("theme-dark");

      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>
<ViewTransitions />
